player:
    # The most important factor governing advance of Players through phrases, this is simply
    #  the percentage prob that they advance on any given iteration
    phrase_adv_prob_factor: 25  # 100
    # Tunable parms for shifting playing of current phrase out of its current
    #  phase, and also to shift it more in alignment.  Shift simple pre-pends
    #  a rest Note to current phrase before writing it to Score.  Supports
    #  score directive to adjust phase, and another to move in and out of phase
    #  during a performance
    # Percentage prob that a Player will adjust phase on any given iteration
    adj_phase_prob_factor: 5
    # The length of the rest Note inserted if a Player is adjusting its phase
    # NOTE THE BELOW IS $WHL, a Global in globals.rb. MUST BE UPDATED IF globals.rb changes
    phase_adj_dur: 4.0  # $WHL
    # Percent prob that a Player will seek unison on any given iteration.  The idea is that
    #  to seek unison the Ensemble and all the Players must seek unison
    unison_prob_factor: 95

    # Tunable parms for probability that Player will rest rather than playing a note.
    # Supports score directive to listen as well as play and not always play
    # Percentage prob that a Player will try to rest on a given iteration (not play)
    rest_prob_factor: 15 # 0
    # Factor multiplied by rest_prob_factor if the Player is already at rest
    stay_at_rest_prob_factor: 1.5

    # Tunable parms for adjusting volume up and down, and prob of making
    #  an amp adjustment. Supports score directive to have crescendos and
    #  decrescendos in the performance
    # Threshold for the ratio of this Players average amp for its current phrase
    #  to the max average amp among all the Players. Ratio below this means the Player
    #  will raise its amp by amp_crescendo_adj_factor
    amp_adj_crescendo_ratio_threshold: 0.8
    amp_crescendo_adj_factor: 1.1
    # Threshold for the ratio of this Players average amp for its current phrase
    #  to the max average amp among all the Players. Ratio above this means the Player
    #  will lowers its amp by amp_diminuendo_adj_factor
    amp_adj_diminuendo_ratio_threshold: 1.2
    amp_diminuendo_adj_factor: 0.9
    # Percent prob that a Player is seeking crescendo
    crescendo_prob_factor: 50
    # Percent prob that a Player is seeking diminuendo
    diminuendo_prob_factor: 50

    # Tunable parms for transposing the playing of a phrase.  Suppports score directive
    #  to transpose as desired.
    # Percent prob that a Player will seek to transpose its current phrase
    transpose_prob_factor: 20
    # Number of octaves to transpose if the Player does do so
    transpose_shift: 1
    # REQS
    # - "Transposing down by octaves works best on the patterns containing notes of long durations."
    # /REQS
    # Minimum average duration of notes in a phrase for that phrase to be more likely
    #  to transpose down rather than up
    # NOTE THE BELOW IS $HLF, a Global in globals.rb. MUST BE UPDATED IF globals.rb changes
    # Average duration of current phrase threshold -- if the Player's current phrase has
    #  an average Note duration at least this long, they will seek to transpose down instead of
    #  up by a probability of transpose_down_prob_factor
    transpose_down_dur_threshold: 2.0  # $HLF
    transpose_down_prob_factor: 50

    # Give notes a bit of variance in start time and duration, also known as "swing"
    #  on e.g. my old Alesis SR-16 drum machine. If not overdone gives a more human feel.
    # Note that in minimalist pieces centering on pulse a tiny bit goes a long, long way,
    #  at least with CSound rendering.  None and the piece feels synthetic, like sequenced
    #  music, but if it is noticeable at all the swinging pulse of the rhythm is lost
    swing_range_min: 0.999 # 1.0 # 0.98
    swing_range_max: 1.001 # 1.0 # 1.02
