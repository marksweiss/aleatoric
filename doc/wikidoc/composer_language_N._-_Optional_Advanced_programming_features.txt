*Functions (Advanced Topic)*

Advanced users can extend Composer by defining their own functions and using these in scores.  Functions are an advanced topic, which we will just touch on here.  A function has two different parts, the place where you create the function, providing its name and a full definition, and the place you call function, invoking it and expecting it to "run" and "give back" a value.  (If this description is insultingly simple because you are a more technical reader, apologies.  If in turn it makes no sense because you are not, return here later when these concepts are more familiar).

In any case, we discuss functions here because they require the fourth and final punctuation mark in the Composer language, the colon.  Function declarations, which name and define a function, and function invocations both require a colon.  An example:

@# Declare the function, function name is followed immediately by a colon@</br>
@loop_step_up: start, step, index@</br>
&nbsp;&nbsp;@start + (step * index)@</br>
...</br>
...</br>

@# Call the function, function name is followed immediately by a colon@
@note "rise 1"@</br>
&nbsp;&nbsp;@start loop_step_up: 0.0, 1, 2@</br>
</br>

TODO Also Assignment and using variables in scripts without using functions goes here

TODO Also @repeat@ loops go here

TODO Also @repeat until@ loops go here