# Declare Variables #

_pi_rng = 314
_pi_fctr = 100.0
_midi_min = 0
_midi_max = 127
_cycle_rng = 64
_octave_rng = 12
_loops_factor = 1
  
cycle: index, rng
  Math.sin((index % rng) / _pi_fctr)

# TODO - should be able to compose functions
cycle_i: index, rng  
  Math.sin((index % rng) / _pi_fctr).to_i
  
  
#
# The Score #
#

# Set format as first statement  
format midi

# Declare all the phrases, notes, etc. Call functions, use vars.

phrase "p1"
  repeat _pi_rng * _loops_factor
  
    note "p1 n1"
      # Open Bug: channel must be declared before instrument
      channel     0 
      instrument  MIDI_Blown_Bottle
      duration    0.025 * (cycle: index, _pi_rng)  
      amplitude   _midi_max * (cycle: index, _pi_rng)
      pitch       C6

    note "p1 n1 rest 1"
      channel     0 
      instrument  MIDI_Blown_Bottle
      duration    0.00925 * (cycle: index, _pi_rng) 
      velocity    0
      pitch       Cneg1
      
    note "p1 n2"
      # Open Bug: channel must be declared before instrument
      channel     0 
      instrument  MIDI_Blown_Bottle
      duration    0.025 * (cycle: index, _pi_rng)  
      amplitude   _midi_max * (cycle: index, _pi_rng)
      pitch       C6S

     
      
# Call render to generate output      
render "..\\compositions\\textures2.mid"
  phrases "p1"
