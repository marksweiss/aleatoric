require 'util'
require 'global'
require 'user_instruction'
require 'composer'

def set_csound_consts

# Now set CSound consts, which are just the scale note values in CSound cspch format
Aleatoric.const_set :C1, 5.00
Aleatoric.const_set :C1S, 5.01
Aleatoric.const_set :D1F, 5.01
Aleatoric.const_set :D1, 5.02
Aleatoric.const_set :D1S, 5.03
Aleatoric.const_set :E1F, 5.03
Aleatoric.const_set :E1, 5.04
Aleatoric.const_set :F1, 5.05
Aleatoric.const_set :F1S, 5.06
Aleatoric.const_set :G1F, 5.06
Aleatoric.const_set :G1, 5.07
Aleatoric.const_set :G1S, 5.08
Aleatoric.const_set :A1F, 5.08
Aleatoric.const_set :A1, 5.09
Aleatoric.const_set :A1S, 5.10
Aleatoric.const_set :B1F, 5.10
Aleatoric.const_set :B1, 5.11
Aleatoric.const_set :C2LIM, 5.12
Aleatoric.const_set :C2, 6.00
Aleatoric.const_set :C2S, 6.01
Aleatoric.const_set :D2F, 6.01
Aleatoric.const_set :D2, 6.02
Aleatoric.const_set :D2S, 6.03
Aleatoric.const_set :E2F, 6.03
Aleatoric.const_set :E2, 6.04
Aleatoric.const_set :F2, 6.05
Aleatoric.const_set :F2S, 6.06
Aleatoric.const_set :G2F, 6.06
Aleatoric.const_set :G2, 6.07
Aleatoric.const_set :G2S, 6.08
Aleatoric.const_set :A2F, 6.08
Aleatoric.const_set :A2, 6.09
Aleatoric.const_set :A2S, 6.10
Aleatoric.const_set :B2F, 6.10
Aleatoric.const_set :B2, 6.11
Aleatoric.const_set :C3LIM, 6.12
Aleatoric.const_set :C3, 7.00
Aleatoric.const_set :C3S, 7.01
Aleatoric.const_set :D3F, 7.01
Aleatoric.const_set :D3, 7.02
Aleatoric.const_set :D3S, 7.03
Aleatoric.const_set :E3F, 7.03
Aleatoric.const_set :E3, 7.04
Aleatoric.const_set :F3, 7.05
Aleatoric.const_set :F3S, 7.06
Aleatoric.const_set :G3F, 7.06
Aleatoric.const_set :G3, 7.07
Aleatoric.const_set :G3S, 7.08
Aleatoric.const_set :A3F, 7.08
Aleatoric.const_set :A3, 7.09
Aleatoric.const_set :A3S, 7.10
Aleatoric.const_set :B3F, 7.10
Aleatoric.const_set :B3, 7.11
Aleatoric.const_set :C4LIM, 7.12
Aleatoric.const_set :C4, 8.00
Aleatoric.const_set :C4S, 8.01
Aleatoric.const_set :D4F, 8.01
Aleatoric.const_set :D4, 8.02
Aleatoric.const_set :D4S, 8.03
Aleatoric.const_set :E4F, 8.03
Aleatoric.const_set :E4, 8.04
Aleatoric.const_set :F4, 8.05
Aleatoric.const_set :F4S, 8.06
Aleatoric.const_set :G4F, 8.06
Aleatoric.const_set :G4, 8.07
Aleatoric.const_set :G4S, 8.08
Aleatoric.const_set :A4F, 8.08
Aleatoric.const_set :A4, 8.09
Aleatoric.const_set :A4S, 8.10
Aleatoric.const_set :B4F, 8.10
Aleatoric.const_set :B4, 8.11
Aleatoric.const_set :C5LIM, 8.12
Aleatoric.const_set :C5, 9.00
Aleatoric.const_set :C5S, 9.01
Aleatoric.const_set :D5F, 9.01
Aleatoric.const_set :D5, 9.02
Aleatoric.const_set :D5S, 9.03
Aleatoric.const_set :E5F, 9.03
Aleatoric.const_set :E5, 9.04
Aleatoric.const_set :F5, 9.05
Aleatoric.const_set :F5S, 9.06
Aleatoric.const_set :G5F, 9.06
Aleatoric.const_set :G5, 9.07
Aleatoric.const_set :G5S, 9.08
Aleatoric.const_set :A5F, 9.08
Aleatoric.const_set :A5, 9.09
Aleatoric.const_set :A5S, 9.10
Aleatoric.const_set :B5F, 9.10
Aleatoric.const_set :B5, 9.11
Aleatoric.const_set :C6LIM, 9.12
Aleatoric.const_set :C6, 10.00
Aleatoric.const_set :C6S, 10.01
Aleatoric.const_set :D6F, 10.01
Aleatoric.const_set :D6, 10.02
Aleatoric.const_set :D6S, 10.03
Aleatoric.const_set :E6F, 10.03
Aleatoric.const_set :E6, 10.04
Aleatoric.const_set :F6, 10.05
Aleatoric.const_set :F6S, 10.06
Aleatoric.const_set :G6F, 10.06
Aleatoric.const_set :G6, 10.07
Aleatoric.const_set :G6S, 10.08
Aleatoric.const_set :A6F, 10.08
Aleatoric.const_set :A6, 10.09
Aleatoric.const_set :A6S, 10.10
Aleatoric.const_set :B6F, 10.10
Aleatoric.const_set :B6, 10.11
Aleatoric.const_set :C7LIM, 10.12
Aleatoric.const_set :C7, 11.00
Aleatoric.const_set :C7S, 11.01
Aleatoric.const_set :D7F, 11.01
Aleatoric.const_set :D7, 11.02
Aleatoric.const_set :D7S, 11.03
Aleatoric.const_set :E7F, 11.03
Aleatoric.const_set :E7, 11.04
Aleatoric.const_set :F7, 11.05
Aleatoric.const_set :F7S, 11.06
Aleatoric.const_set :G7F, 11.06
Aleatoric.const_set :G7, 11.07
Aleatoric.const_set :G7S, 11.08
Aleatoric.const_set :A7F, 11.08
Aleatoric.const_set :A7, 11.09
Aleatoric.const_set :A7S, 11.10
Aleatoric.const_set :B7F, 11.10
Aleatoric.const_set :B7, 11.11
Aleatoric.const_set :C8LIM, 11.12
Aleatoric.const_set :C8, 12.00
Aleatoric.const_set :C8S, 12.01
Aleatoric.const_set :D8F, 12.01
Aleatoric.const_set :D8, 12.02
Aleatoric.const_set :D8S, 12.03
Aleatoric.const_set :E8F, 12.03
Aleatoric.const_set :E8, 12.04
Aleatoric.const_set :F8, 12.05
Aleatoric.const_set :F8S, 12.06
Aleatoric.const_set :G8F, 12.06
Aleatoric.const_set :G8, 12.07
Aleatoric.const_set :G8S, 12.08
Aleatoric.const_set :A8F, 12.08
Aleatoric.const_set :A8, 12.09
Aleatoric.const_set :A8S, 12.10
Aleatoric.const_set :B8F, 12.10
Aleatoric.const_set :B8, 12.11

set_csound_consts

end

module Aleatoric

E3F = 1
C3 = 1
F3 = 1
E3F = 1
B3F = 1
F3 = 1
C4LIM = 1

# NOTE: Lame but right now assignment to vars must be in first block of script above all other statements
_num_steps=100
_base_amp=2000
_num_modfactors=7
_mod_factors=[0.7,0.8,0.9,1.0,1.1,1.2,1.3]

_start1=0.0001
_start2=0.00011
_rest_dur1=0.001
_nt_dur1=(0.075-0.001)
_pitch_step1=(E3F-C3)/ 100

_start3=0.00012
_start4=0.00013
_rest_dur2=0.004
_nt_dur2=(0.075-0.004)
_pitch_step2=(F3-E3F)/ 100

_start5=0.00014
_start6=0.00015
_rest_dur3=0.016
_nt_dur3=(0.075-0.016)
_pitch_step3=(B3F-F3)/ 100

_start7=0.00016
_start8=0.00017
_rest_dur4=0.008
_nt_dur4=(0.075-0.008)
_pitch_step4=(C4LIM-B3F)/ 100

# This is function declaration syntax. Functions can be anywhere in the script,but can't
# be nested within anything else(not within sections,phrases,notes,write,repeat,format blocks etc.)
def loop_step_u(start,step,index)
start+(step*index)

end
def loop_step_d(start,step,index)
start-(step*index)

end
def modulate_i(val)
(val*[0.7,0.8,0.9,1.0,1.1,1.2,1.3][(rand*7).to_i]).to_i

end
def f_start(index,is_rest)
$last_start=0
if not is_rest
x=rand(100)
x=x%((0.075-0.001)*100).to_i
$last_start=x
x
else
$last_start
end

end
def f_dur(index)
x=EITH
if rand(20)==0
x=WHL+(rand(0.1))
else
dur=[EITH,SXTNTH,EITH,SXTNTH,EITH,SXTNTH,QRTR,SXTNTH]
x=dur[index%8]+(rand(0.1))
end
x

end
def f_amp(index,factor)
amp=[2400,200,2800,2000,2350,700,2900,2000]
x=0
if rand(2)%2==0
x=amp[index%8]+rand(0.1)
else
x=amp[index%8]-rand(0.1)
end
x*factor

end
def f_pitch(index,transpose)
pitch=[C4,A4F,E4F,C4,F4,A4F,C4,C3]
x=pitch[index%8]
adj=(rand(0.1)*0.001)
adj*=-1 if rand(2)%2==0
x+adj+transpose


end
phrase "C=> EFlat,EFlat=> C" do
repeat 100 do|index|
note "rise 1" do
instrument 1

breakpoint

start(loop_step_u(0.0001,(0.075-0.001)+0.001,index-1))
duration(0.075-0.001)
amplitude(modulate_i(2000))
pitch(loop_step_u(C3,(E3F-C3)/100,index))
func_table 1

end
note "fall 1" do
instrument 1
start(loop_step_u(0.00011,(0.075-0.001)+0.001,index-1))
duration(0.075-0.001)
amplitude(modulate_i(2000))
pitch(loop_step_d(E3F,(E3F-C3)/100,index))
func_table 1

end
note "rest pulse" do
instrument 1
start(loop_step_u(0.00011+(0.075-0.001),(0.075-0.001)+0.001,index-1))
duration 0.001
amplitude 0
pitch 8.01
func_table 1

end
end
end
phrase "EFlat=> F,F=> EFlat" do
repeat 100 do|index|
note "rise 2" do
instrument 1
start(loop_step_u(0.00012,(0.075-0.004)+0.004,index-1))
duration(0.075-0.004)
amplitude(modulate_i(2000))
pitch(loop_step_u(E3F,(F3-E3F)/100,index))
func_table 1

end
note "fall 2" do
instrument 1
start(loop_step_u(0.00013,(0.075-0.004)+0.004,index-1))
duration(0.075-0.004)
amplitude(modulate_i(2000))
pitch(loop_step_d(F3,(F3-E3F)/100,index))
func_table 1

end
note "rest pulse" do
instrument 1
start(loop_step_u(0.00013+(0.075-0.004),(0.075-0.004)+0.004,index-1))
duration 0.004
amplitude 0
pitch 8.01
func_table 1

end
end
end
phrase "F=> BFlat,BFlat=> F" do
repeat 100 do|index|
note "rise 3" do
instrument 1
start(loop_step_u(0.00014,(0.075-0.016)+0.016,index-1))
duration(0.075-0.016)
amplitude(modulate_i(2000))
pitch(loop_step_u(F3,(B3F-F3)/100,index))
func_table 1

end
note "fall 3" do
instrument 1
start(loop_step_u(0.00015,(0.075-0.016)+0.016,index-1))
duration(0.075-0.016)
amplitude(modulate_i(2000))
pitch(loop_step_d(B3F,(B3F-F3)/100,index))
func_table 1

end
note "rest pulse" do
instrument 1
start(loop_step_u(0.00015+(0.075-0.016),(0.075-0.016)+0.016,index-1))
duration 0.016
amplitude 0
pitch 8.01
func_table 1

end
end
end
phrase "BFlat=> C,C=> BFlat" do
repeat 100 do|index|
note "rise 4" do
instrument 1
start(loop_step_u(0.00016,(0.075-0.008)+0.008,index-1))
duration(0.075-0.008)
amplitude(modulate_i(2000))
pitch(loop_step_u(B3F,(C4LIM-B3F)/100,index))
func_table 1

end
note "fall 4" do
instrument 1
start(loop_step_u(0.00017,(0.075-0.008)+0.008,index-1))
duration(0.075-0.008)
amplitude(modulate_i(2000))
pitch(loop_step_d(C4,(C4LIM-B3F)/100,index))
func_table 1
end
note "rest pulse" do
instrument 1
start(loop_step_u(0.00017+(0.075-0.008),(0.075-0.008)+0.008,index-1))
duration 0.008
amplitude 0
pitch 8.01
func_table 1

end
end
repeat 100 do|index|
end
end
phrase "foreground 1" do
repeat 100 do|index|
note "C7 Down" do
instrument 1
start(loop_step_u(0.00014,SXTYFRTH+(rand(0.1)/500),index-1))
duration(f_dur(index))
amplitude(f_amp(index,0.2))
pitch(loop_step_d(C7,0.01,index))
func_table 1
end
note "C6 Up" do
instrument 1
start(loop_step_u(0.00013,SXTYFRTH+(rand(0.1)/500),index-1))
duration(f_dur(index))
amplitude(f_amp(index,0.2))
pitch(loop_step_u(C6,0.01,index))
func_table 1

end
note "C7 Down" do
instrument 1
start(loop_step_u(0.00014+(SXTYFRTH*100),SXTYFRTH+(rand(0.1)/500),index-1))
duration(f_dur(index))
amplitude(f_amp(index,0.2))
pitch(loop_step_d(C7,0.01,index))
func_table 1
end
note "C6 Up" do
instrument 1
start(loop_step_u(0.00013+(SXTYFRTH*100),SXTYFRTH+(rand(0.1)/500),index-1))
duration(f_dur(index))
amplitude(f_amp(index,0.2))
pitch(loop_step_u(C6,0.01,index))
func_table 1

end
note "C7 Down" do
instrument 1
start(loop_step_u(0.00015,THRTYSCND+(rand(0.1)/250),index-1))
duration(f_dur(index))
amplitude(f_amp(index,0.1))
pitch(loop_step_d(C5,0.01,index))
func_table 1
end
note "C6 Up" do
instrument 1
start(loop_step_u(0.00016,THRTYSCND+(rand(0.1)/250),index-1))
duration(f_dur(index))
amplitude(f_amp(index,0.1))
pitch(loop_step_u(C4,0.01,index))
func_table 1

end
note "Melody" do
instrument 1
start(loop_step_u(0.00013,SXTYFRTH+(rand(0.1)/500),index-1))
duration THRTYSCND+(rand(0.1)/250)# f_dur(index)
amplitude(f_amp(index,0.2))
pitch(f_pitch(index,0.0))
func_table 1
end
note "Melody" do
instrument 1
start(loop_step_u(0.00013+(SXTYFRTH*100),SXTYFRTH+(rand(0.1)/500),index-1))
duration THRTYSCND+(rand(0.1)/250)# f_dur(index)
amplitude(f_amp(index,0.2))
pitch(f_pitch(index,1.0))
func_table 1



end
end
end
write "exstatic.sco" do
format csound
phrases "foreground 1"
# " C=> EFlat,EFlat=> C "," EFlat=> F,F=> EFlat "," F=> BFlat,BFlat=> F "," BFlat=> C,C=> BFlat ",

end
render "exstatic.wav" do
orchestra "markov_opt_1.orc"
end


end
