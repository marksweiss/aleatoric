# TODO wrap this in composition.rb, have it write and process a copy of the file with the module header
# TODO preprocess and make this not pure Ruby
# TODO support loops
# note "1" has is nicer than "do"
# write "Score" as is nicer than "do"

module Aleatoric


# start outer section
section "Intro Part 1" do

phrase "Intro Phrase" do

  note "1" do
    instrument  1 
    start       0.0 
    duration    0.5
    amplitude   1000
    pitch       7.01
    func_table  1
  end
  
  note do
    instrument  1
    start       1.0 
    duration    1.0
    amplitude   1100
    pitch       7.02
    func_table  1
  end 

end

end # section Intro Part 1

# Some Phrases on their own, with compact syntax for Notes shown
phrase "Stuff in the Middle" do
  note "3" do instrument 1; start 2.0; duration 0.5; amplitude 1000; pitch 7.03; func_table 1 end
  note "4" do instrument 1; start 3.0; duration 0.5; amplitude 1000; pitch 7.04; func_table 1 end
end

phrase "Coda" do
  note "3" do instrument 1; start 2.0; duration 0.5; amplitude 1000; pitch 7.05; func_table 1 end
  note "4" do instrument 1; start 3.0; duration 0.5; amplitude 1000; pitch 7.06; func_table 1 end
end

phrase "Loop" do

#  TODO THIS IS BROKEN. HOW TO DEFINE "index"??
#  repeat 20 do
#    note do
#      instrument 1
#      start       1.0 * index
#      duration    0.2
#      amplitude   1000 + (1000 * 0.1 * index) 
#      pitch       7.02
#      func_table  1
#    end    
#  end

end

# Specify format and write Sections and Phrases by name to the output Score
write "SampleScore.sco" do
  format    csound
  sections  "Intro Part 1"
  phrases   "Stuff in the Middle", "Coda"     
end

render "Close_Encounters_of_the_Third_Kind.wav" do
   orchestra  "markov_opt_1.orc"
end

end
